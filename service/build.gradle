buildscript {
    repositories {
        mavenLocal()
        maven {
            url "http://packages.confluent.io/maven"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$versions.springBoot")
    }
}

plugins {
    id 'application'
    id 'jacoco'
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("$buildDir/reports/jacoco/html")
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java-library'

configurations {
    jaxb
}

jar {
    enabled = true
    group = 'com.paymentology'
    manifest { attributes "Main-Class": "com.paymentology.Application" }
}

bootJar {

    classifier = 'boot'
}

mainClassName = 'com.paymentology.Application'
defaultTasks 'run'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

dependencies {
    implementation libs.springBootWeb
    implementation libs.springfoxSwagger2
    implementation libs.springfoxSwaggerUi
    implementation libs.logStash
    implementation libs.thymeleaf
    implementation libs.commonCSV

   // implementation 'org.apache.commons:commons-csv:1.9'
    compile group: 'org.webjars', name: 'bootstrap', version: '4.0.0-2'
    compile 'org.webjars:jquery:3.5.1'
    runtimeOnly libs.h2
    implementation libs.springBootBatch

    api libs.commonLib
    api libs.lombok
    api libs.jackson
    api libs.jacksonDataBind
    api libs.jacksonJsonOrg
    api libs.springBootJPA
    api libs.mapstructs

    configurations.all {
        exclude module: 'slf4j-log4j12'
    }

    compileOnly libs.lombok
    annotationProcessor libs.lombok
    testImplementation libs.wiremock
    annotationProcessor libs.mapstructsProcessor
    testImplementation libs.junitJupiterApi
    testImplementation libs.junitJupiterPlatComm
    testImplementation libs.junitJupiterPlatEng
    testImplementation(libs.mockitoJunitJupiter) {
        exclude group: 'org.junit.jupiter'
    }
    testRuntimeOnly libs.junitJupiterEngine

    testImplementation libs.mockitoCore
    testImplementation libs.springBootStarterTest

}

compileJava {
    options.compilerArgs = ['-Amapstruct.defaultComponentModel=spring']
}

test {
    // Enables Junit 5 for Gradle
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    afterTest { desc, result ->
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
    finalizedBy jacocoTestReport
}